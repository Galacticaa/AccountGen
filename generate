#!/bin/php
<?php require 'vendor/autoload.php';

use AccountGen\Ptc\Generator;
use Illuminate\Database\Capsule\Manager as Capsule;

$db = include 'config/database.php';
$db['driver'] = 'mysql';

$capsule = (new Capsule);
$capsule->addConnection($db);
$capsule->setAsGlobal();
$capsule->bootEloquent();

$options = getopt('i::u::m::n::', [
    'instance::',
    'unique::',
    'multiples::',
    'username::',
]);

$instance = $options['instance'] ?? $options['i'] ?? null;
$custom = $options['username'] ?? $options['n'] ?? null;
//'someUsername##?#';

if ($instance !== null) {
    $instances = @include 'config/instances.php';

    if (!$instances || !count($instances)) {
        throw new Exception("No instances defined in config/instances.php");
    }

    if (!array_key_exists($instance, $instances)) {
        throw new Exception("Instance '{$instance}' not found in config/instances.php");
    }

    $unique = $options['unique'] ?? $options['u'] ?? $instances[$instance]['names'] ?? 1;
    $multiples = $options['multiples'] ?? $options['m'] ?? null;

    if ($multiples === null) {
        $max = $instances[$instance]['total'];
        $multiples = ceil($max / $unique);
    } else {
        $max = $unique * $multiples;
    }
} else {
    $unique = $options['unique'] ?? $options['u'] ?? 1;
    $multiples = $options['multiples'] ?? $options['m'] ?? 15;
    $max = $unique * $multiples;
}

echo '#username;email;password;dob;country'.PHP_EOL;

$factory = new Generator($instance);

for ($i = 0; $i < $unique; $i++) {
    $count = (($i + 1) * $multiples) < $max
        ? $multiples
        : $max - $multiples * $i;

    if ($count < 1) {
        // More unique names than accounts needed
        break;
    }

    $accounts = $factory->generateBatch($count, $i === 0 ? $custom : null);

    foreach ($accounts as $account) {
        echo $account->formatForKinan().PHP_EOL;
    }
}

# vim: syntax=php
